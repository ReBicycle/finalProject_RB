<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에서 namespace는 필수적으로 명시해야 함 -->

<mapper namespace="bicycle">
   <insert id="registerBicycle" parameterType="bicycleVO">
      <selectKey keyProperty="bicycleNo" resultType="int" order="BEFORE">
         select bicycle_seq.nextval from dual
      </selectKey>
       insert into bicycle(bicycleNo, memberId, address, purchasePrice, rentPrice, detail, categoryNo, title) 
       values(#{bicycleNo}, #{memberVO.id}, #{address}, #{purchasePrice}, #{rentPrice}, #{detail}, #{categoryVO.categoryNo}, #{title})
    </insert>
    
    <select id="findCategoryByNo" resultType="string">
       select categoryName from category where categoryNo=#{value}
    </select>
    
    <select id="calculateMinPrice" resultType="int">
       select min(rentPrice) from bicycle where categoryNo=#{value}
    </select>
   
    <select id="calculateMaxPrice" resultType="int">
       select max(rentPrice) from bicycle where categoryNo=#{value}
    </select> 
    
    <select id="calculateAvgPrice" resultType="double">
       select round(avg(rentPrice), 1) from bicycle where categoryNo=#{value}
    </select>

    <insert id="registerPossibleDate" parameterType="calendarVO">
      insert into possible_day(bicycleNo, startDay, endDay)
      values(#{bicycleNo}, #{startDay}, #{endDay})
   </insert>
   
   <select id="countCategory" resultType="int">
      select count(*) from bicycle where categoryNo=#{value}
   </select>
   
   <insert id="registerMap" parameterType="mapVO">
      insert into map(bicycleNo, latitude, longitude) values(#{bicycleNo}, #{latitude}, #{longitude}) 
   </insert>
   
   <update id="updateBicycle" parameterType="bicycleVO">
      update bicycle set title=#{title}, categoryNo=#{categoryVO.categoryNo}, address=#{address},
      purchasePrice=#{purchasePrice}, rentPrice=#{rentPrice}, detail=#{detail}
      where bicycleNo=#{bicycleNo}
   </update>
   
   <select id="findPossibleDay" resultType="calendarVO">
      select bicycleNo, startDay, endDay from possible_day where bicycleNo=#{bicycleNo}
   </select>
   
   <delete id="deletePossibleDay" parameterType="calendarVO">
      delete from possible_day where bicycleNo=#{bicycleNo}
   </delete>
   
   <insert id="insertPossibleDay" parameterType="calendarVO">
      insert into possible_day(bicycleNo, startDay, endDay) values(#{bicycleNo}, #{startDay}, #{endDay})
   </insert>
   
   <update id="updateMap" parameterType="mapVO">
      update map set latitude=#{latitude}, longitude=#{longitude} where bicycleNo=#{bicycleNo}
   </update>
   
   <select id="findMapByBicycleNo" resultType="mapVO">
      select bicycleNo, latitude, longitude from map where bicycleNo=#{value}
   </select>
   
   <select id="findAddressById" resultType="String">
      select address from rb_member where id=#{value}
   </select>
   <!-- 종봉 자전거 검색 -->
   <!-- <select id="getBicycleListByAddressAndDay" parameterType="map"
      resultType="bicycleVO">
      select b.bicycleNo, b.memberId ,b.address ,b.purchasePrice
      ,b.rentPrice , b.detail ,b.categoryNo,to_char(p.startDay) as
      startDay,to_char(p.endDay) as endDay ,c.photo1,c.photo2,c.photo3
      from bicycle b, possible_day p, bicycle_photo c
      where b.address like '%' ||#{address}|| '%' and b.bicycleNo=p.bicycleNo and     <![CDATA[to_date(#{startDay})>=p.startDay ]]>
      and <![CDATA[ to_date(#{endDay})<=p.endDay ]]>and
      b.bicycleNo=c.bicycleNo
   </select> -->
   <select id="getBicycleListByAddressAndDay" parameterType="map"
      resultMap="bicycleMap" >
      select b.bicycleNo,b.title ,b.memberId ,b.address
      ,b.rentPrice, b.categoryNo,c.photo1,c.photo2,c.photo3,m.latitude,m.longitude,r.picture
      from bicycle b, possible_day p, bicycle_photo c,map m,rb_member r
      where b.address like '%' ||#{address}|| '%' and b.bicycleNo=p.bicycleNo and     <![CDATA[to_date(#{startDay})>=p.startDay ]]>
      and <![CDATA[ to_date(#{endDay})<=p.endDay ]]>and
      b.bicycleNo=c.bicycleNo and b.bicycleNo=m.bicycleNo and b.memberId=r.id
   </select>
   <select id="sortedListByAddressAndDayAndHigh" parameterType="map"
      resultMap="bicycleRM" >
      select b.bicycleNo,b.title, b.memberId ,b.address
      ,b.rentPrice, b.categoryNo,c.photo1,c.photo2,c.photo3,m.latitude,m.longitude,r.picture
      from bicycle b, possible_day p, bicycle_photo c,map m,rb_member r
      where b.address like '%' ||#{address}|| '%' and b.bicycleNo=p.bicycleNo and     <![CDATA[to_date(#{startDay})>=p.startDay ]]>
      and <![CDATA[ to_date(#{endDay})<=p.endDay ]]>and
      b.bicycleNo=c.bicycleNo and b.bicycleNo=m.bicycleNo and b.memberId=r.id
      order by b.rentPrice desc
   </select>
      <select id="sortedListByAddressAndDayAndLow" parameterType="map"
      resultMap="bicycleMap" >
      select b.bicycleNo,b.title, b.memberId ,b.address
      ,b.rentPrice, b.categoryNo,c.photo1,c.photo2,c.photo3,m.latitude,m.longitude,r.picture
      from bicycle b, possible_day p, bicycle_photo c,map m,rb_member r
      where b.address like '%' ||#{address}|| '%' and b.bicycleNo=p.bicycleNo and     <![CDATA[to_date(#{startDay})>=p.startDay ]]>
      and <![CDATA[ to_date(#{endDay})<=p.endDay ]]>and
      b.bicycleNo=c.bicycleNo and b.bicycleNo=m.bicycleNo and b.memberId=r.id order by b.rentPrice asc
   </select>
   <!-- 현근/소영 -상세보기에 필요한 resultMap -->

   <resultMap type="bicycleVO" id="bicycleMap">
      <result column="memberId" property="memberVO.id"/>
      <result column="categoryNo" property="categoryVO.categoryNo"/>
      <result column="photo1" property="photoVO.photo1"/>
      <result column="photo2" property="photoVO.photo2"/>
      <result column="photo3" property="photoVO.photo3"/>
      <result column="longitude" property="map.longitude"/>
      <result column="latitude" property="map.latitude"/>
      <result column = "picture" property="memberVO.picture"/>
   </resultMap>
   <!-- 종봉 -->
   <!-- 현근 -->

   <resultMap type="bicycleVO" id="bicycleRM">
      <!-- BicycleVO 의 MemberVO  -->
      <result column="memberId" property="memberVO.id" />
      <result column="name" property="memberVO.name"/>
      <result column="phone" property="memberVO.phone" />
      <result column="email" property="memberVO.email"/>
      <result column = "picture" property="memberVO.picture"/>
      
      <!-- BicycleVO 의 PhotoVO  -->
      <result column = "photo1" property="photoVO.photo1"/>
      <result column = "photo2" property="photoVO.photo2"/>
      <result column = "photo3" property="photoVO.photo3"/>
      
      <!-- BicycleVO 의 CategoryVO -->
      <result column="categoryNo" property="categoryVO.categoryNo"/>
      <result column="categoryName" property="categoryVO.categoryName"/>
   </resultMap>
	
	<select id = "getPossibleCVO" parameterType = "calendarVO" resultType="calendarVO">
			select  to_char(p.startDay, 'yyyy-mm-dd')as startDay ,to_char(p.endDay, 'yyyy-mm-dd') as endDay ,b.bicycleNo
			from possible_day p, bicycle b
			where p.bicycleNo = b.bicycleNo and b.bicycleNo = #{bicycleNo} and 
			<![CDATA[to_date(#{startDay}, 'yyyy-mm-dd')>= p.startDay]]>
			and <![CDATA[to_date(#{endDay}, 'yyyy-mm-dd')<= p.endDay]]>
	</select>
	
	
	<delete id="updatePossibleCalendarVOType1" parameterType = "hashMap">
		delete 
		from possible_day
		where startDay = to_date(#{possible.startDay}, 'yyyy-mm-dd') and endDay = to_date(#{possible.endDay},'yyyy-mm-dd')
		
	</delete>
	
	<update id="updatePossibleCalendarVOType0" parameterType = "hashMap">
		update possible_day
		set startDay = to_date(#{rent.endDay}, 'yyyy-mm-dd')
		where startDay = to_date(#{possible.startDay}, 'yyyy-mm-dd') and endDay = to_date(#{possible.endDay},'yyyy-mm-dd')
	
	</update>
	 
	<update id="updatePossibleCalendarVOType2" parameterType="calendarVO">
		update possible_day
		set endDay = to_date(#{startDay}, 'yyyy-mm-dd')
		from possible_day p, bicycle b
		where p.bicycleNo = b.bicycleNo and b.bicycleNo = #{bicycleNo} 
		and <![CDATA[to_date(#{startDay}, 'yyyy-mm-dd')>= p.startDay]]>
		and <![CDATA[to_date(#{endDay}, 'yyyy-mm-dd')<= p.endDay]]>
	</update>
	<!--
	<insert id="updatePossibleCalendarVOType3" parameterType = "calendarVO">
		insert into possible_day
		values(#{bicycleNo}, to_date(#{endDay}), (
			select  p.endDay
			from possible_day p, bicycle b
			where p.bicycleNo = b.bicycleNo and b.bicycleNo = #{bicycleNo} and 
			<![CDATA[to_date(#{startDay}, 'yyyy-mm-dd')>= p.startDay]]>
			and <![CDATA[to_date(#{endDay}, 'yyyy-mm-dd')<= p.endDay]]>
		))	
	</insert> -->
</mapper>
